# Generated by Django 4.1.2 on 2022-10-20 04:26

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_association', models.BooleanField(default=False)),
                ('equipe_secours', models.BooleanField(default=False)),
                ('motard', models.BooleanField(default=False)),
                ('client', models.BooleanField(default=False)),
                ('is_membre_equipe_secours', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Ceni',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_national', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('type', models.CharField(choices=[('Personne', 'Personne'), ('Colis', 'Colis')], max_length=20)),
                ('statut', models.CharField(choices=[('En demande', 'En demande'), ('En cours', 'En cours'), ('Finis', 'Finis')], max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Association',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('nom', models.CharField(max_length=50)),
                ('president', models.CharField(max_length=50)),
                ('vice_president', models.CharField(max_length=50)),
                ('adresse', models.CharField(max_length=250)),
                ('numero_impot', models.CharField(max_length=50)),
                ('date_creation', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='EquipeSecours',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('nom', models.CharField(max_length=50)),
                ('position', models.CharField(max_length=50)),
                ('nombre_member', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('nom', models.CharField(max_length=50)),
                ('post_nom', models.CharField(max_length=50)),
                ('prenom', models.CharField(max_length=50)),
                ('photo', models.ImageField(blank=True, max_length=200, null=True, upload_to='profils/')),
                ('date_naissance', models.DateField()),
                ('genre', models.CharField(choices=[('Femme', 'Femme'), ('Homme', 'Homme')], max_length=10)),
                ('adresse', models.CharField(blank=True, max_length=250, null=True)),
                ('telephone', models.CharField(blank=True, max_length=50, null=True)),
                ('etat_civil', models.CharField(choices=[('Celibataire', 'Celibataire'), ('Marié', 'Marié'), ('Veuf', 'Veuf')], max_length=50)),
                ('numero_national', models.CharField(max_length=50, unique=True)),
                ('profession', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Alerte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('longitude', models.CharField(max_length=50)),
                ('latitude', models.CharField(max_length=50)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api_rest.course')),
                ('utilisateur', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api_rest.utilisateur')),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('utilisateur_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api_rest.utilisateur')),
            ],
            bases=('api_rest.utilisateur',),
        ),
        migrations.CreateModel(
            name='Parking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('adresse', models.CharField(max_length=250)),
                ('association', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_rest.association')),
            ],
        ),
        migrations.CreateModel(
            name='Intervention',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('alerte', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api_rest.alerte')),
                ('equipe_secours', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api_rest.equipesecours')),
            ],
        ),
        migrations.CreateModel(
            name='Motard',
            fields=[
                ('utilisateur_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api_rest.utilisateur')),
                ('matricule', models.CharField(max_length=50)),
                ('parking', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api_rest.parking')),
            ],
            bases=('api_rest.utilisateur',),
        ),
        migrations.CreateModel(
            name='MembreEquipeSecours',
            fields=[
                ('utilisateur_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api_rest.utilisateur')),
                ('equipe_secours', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api_rest.equipesecours')),
            ],
            bases=('api_rest.utilisateur',),
        ),
        migrations.AddField(
            model_name='course',
            name='client',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api_rest.client'),
        ),
        migrations.AddField(
            model_name='course',
            name='motard',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api_rest.motard'),
        ),
    ]
